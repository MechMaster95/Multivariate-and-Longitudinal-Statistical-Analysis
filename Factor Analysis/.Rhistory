d2<- diag(x.cent%*%solve(s)%*%t(x.cent))
qchi <- qchisq((1:n-0.5)/n, df =p)
sortd <- sort(d2)
plot(qchi,sortd,pch=19,xlab="Chi-squared quantiles",ylab="Mahalonobis squared distance",main="chi-square Q-Q plot")
points(qchi[(n-mark+1):n],sortd[(n-mark+1):n],cex=3,col="#990000")
return((sortd[(n-mark+1):n]))
}
a<-chisquare.plot(x=dat[,1:4],mark = 2)
a[1]
a[2]
plot(dat$x1,dat$x2 ,
xlim = c(1000, 3500), ylim = c(800, 3000),
pch=19, col = c("steelblue"))
abline(0,1,col="blue")
a[1]
a[2]
i<-which(dat$d2==max(dat$d2))
dat <- dat[-c(i),]
j<-which(dat$d2==max(dat$d2))
dat<- dat[-c(j),]
dat
sk<-skull_cov[,1:4]
s<-cov(sk)
x.cent <- scale(sk,center =T, scale = F)
d2<- diag(x.cent%*%solve(s)%*%t(x.cent))
dat
max(dat$d2)
dat<- read.table("https://www.stat.ncsu.edu/people/maity/courses/st537-S2019/data/T4-3.DAT", header=F)
colnames(dat) <- c("x1", "x2", "x3", "x4", "d2")
n <- nrow(dat)
p <- ncol(dat) - 1
head(dat)
######Question 1#######
apply(dat[,1:4], 2, shapiro.test)
library(MVN)
mvn(dat[, 1:4], mvnTest = "royston", multivariatePlot = "qq")
chisquare.plot <- function(x,mark){
p <- ncol(x)
n<-nrow(x)
xbar<- colMeans(x)
s <- cov(x)
###Mahalonobis Dist
x.cent <- scale(x,center =T, scale = F)
d2<- diag(x.cent%*%solve(s)%*%t(x.cent))
qchi <- qchisq((1:n-0.5)/n, df =p)
sortd <- sort(d2)
plot(qchi,sortd,pch=19,xlab="Chi-squared quantiles",ylab="Mahalonobis squared distance",main="chi-square Q-Q plot")
points(qchi[(n-mark+1):n],sortd[(n-mark+1):n],cex=3,col="#990000")
return((sortd[(n-mark+1):n]))
}
a<-chisquare.plot(x=dat[,1:4],mark = 2)
a[1]
a[2]
i<-which(dat$d2==max(dat$d2))
dat <- dat[-c(i),]
j<-which(dat$d2==max(dat$d2))
dat<- dat[-c(j),]
dat
max(dat$d2)
length(dat)
library(HSAUR3)
library(ggplot2)
library(GGally)
library(HSAUR3)
library(ggplot2)
library(GGally)
epochs<-skulls$epoch
skull_cov<- skulls[epochs=="c4000BC",2:5]
ggpairs(skull_cov,xlab="c4000BC")
chisquare.plot <- function(x,mark){
p <- ncol(x)
n<-nrow(x)
xbar<- colMeans(x)
s <- cov(x)
###Mahalonobis Dist
x.cent <- scale(x,center =T, scale = F)
d2<- diag(x.cent%*%solve(s)%*%t(x.cent))
qchi <- qchisq((1:n-0.5)/n, df =p)
sortd <- sort(d2)
plot(qchi,sortd,pch=19,xlab="Chi-squared quantiles",ylab="Mahalonobis squared distance",main="chi-square Q-Q plot")
points(qchi[(n-mark+1):n],sortd[(n-mark+1):n],cex=3,col="#990000")
return((sortd[(n-mark+1):n]))
}
install.packages(mnormt)
install.packages(MNORMT)
install.packages("mnormt")
install.packages("mnormt")
install.packages("mnormt")
dat<- read.table("https://www.stat.ncsu.edu/people/maity/courses/st537-S2019/data/T4-3.DAT", header=F)
colnames(dat) <- c("x1", "x2", "x3", "x4", "d2")
n <- nrow(dat)
p <- ncol(dat)
max(dat$d2)
install.packages(mnormt)
install.packages("mnormt")
dat<- read.table("https://www.stat.ncsu.edu/people/maity/courses/st537-S2019/data/T4-3.DAT", header=F)
colnames(dat) <- c("x1", "x2", "x3", "x4", "d2")
n <- nrow(dat)
p <- ncol(dat)
head(dat)
i<-which(dat$d2==max(dat$d2))
dat <- dat[-c(i),]
j<-which(dat$d2==max(dat$d2))
dat<- dat[-c(j),]
dat$d2
max(dat$d2)
apply(dat[,1:4], 2, shapiro.test)
library(MVN)
mvn(dat[, 1:4], mvnTest = "royston", multivariatePlot = "qq")
chisquare.plot <- function(x,mark){
p <- ncol(x)
n<-nrow(x)
xbar<- colMeans(x)
s <- cov(x)
###Mahalonobis Dist
x.cent <- scale(x,center =T, scale = F)
d2<- diag(x.cent%*%solve(s)%*%t(x.cent))
qchi <- qchisq((1:n-0.5)/n, df =p)
sortd <- sort(d2)
plot(qchi,sortd,pch=19,xlab="Chi-squared quantiles",ylab="Mahalonobis squared distance",main="chi-square Q-Q plot")
points(qchi[(n-mark+1):n],sortd[(n-mark+1):n],cex=3,col="#990000")
return((sortd[(n-mark+1):n]))
}
a<-chisquare.plot(x=dat[,1:4],mark = 2)
a[1]
a[2]
abline(0,1,col="blue")
variance=100
mean = 75
#assume a to be 0.1 and calculate the value of b from the variance formula
a=0.1
b=sqrt(a/variance)
#calculate median of gamma
mean1<-qgamma(0.5,a,b)
#deafult it takes scale; scale = 1/rate = 1/b
difference=abs(mean-mean1)
while(difference>0.01){
e=0.01
a1=a+e
b1=sqrt(a1/variance)
mean2=qgamma(0.5,a1,b1)
print(mean2)
difference_1=abs(m-m2)
a=a1
difference=difference_1
}
print(a)
print(b1)
pgamma(75,a,rate = b1)
mean1<-qgamma(0.5,a,b)
mean1
mean1<-qgamma(0.5,shape = a,rate = b)
mean1
difference=abs(mean-mean1)
while(difference>0.01){
e=0.01
a1=a+e
b1=sqrt(a1/variance)
mean2=qgamma(0.5,a1,b1)
print(mean2)
difference_1=abs(m-m2)
a=a1
difference=difference_1
}
while(difference>0.01){
e=0.01
a1=a+e
b1=sqrt(a1/variance)
mean2=qgamma(0.5,a1,b1)
print(mean2)
difference_1=abs(mean-mean2)
a=a1
difference=difference_1
}
print(a)
print(b1)
pgamma(75,a,rate = b1)
temp_matrix= matrix(0,sample_size,4)
n=20
sse=15
##calculated in the attached notes
#shape=a
a<-c(0.1,1,0.1,1)
#rate=b
b<-c(0.1,1,0.1,1)
#given c
c<- c(1,1,2,2)
sample_size=1000000
matrix_data = matrix(0,sample_size,4)
temp_matrix= matrix(0,sample_size,4)
for(i in 1:4){
matrix_data[,i]=1/rgamma(sample_size,shape=(n/2)+a[i],rate=(sse/2)+b[i])
#create 0 and 1 matrix by comparing c value
for(j in 1:sample_size){
temp=matrix_data[j,i]
if(temp > c[i]){
temp_matrix[j,i]=1
}
}
}
tempmat_summary<-colSums(temp_matrix,na.rm= False, dims = 1)
tempmat_summary<-colSums(temp_matrix,na.rm= F, dims = 1)
#calculating the proportion
tempmat_proportion<- tempmat_summary/sample_size
print(tempmat_proportion)
#checking the sensitivity and calculating the ratio between 4a and 4b
ratio1<-tempmat_proportion[1]/tempmat_proportion[2]
ratio2<-tempmat_proportion[3]/tempmat_proportion[4]
print(ratio1)
print(ratio2)
library(sem)
l
library(sem)
install.packages("sem")
install.packages("sem")
getcwd()
dat<- read.table("hemangioma.txt",header = TRUE)
par(mfrow=c(1,3))
for(i in 2:3){
qqnorm(dat[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
}
dat<- read.table("hemangioma.txt",header = TRUE)
getwd()
setwd(C:/Users/Nadim/Desktop/ST537/Hw_4)
setwd("C:/Users/Nadim/Desktop/ST537/Hw_4")
dat<- read.table("hemangioma.txt",header = TRUE)
dat[,-1]
View(dat)
View(dat)
Z<-scale(dat[,-1],scale=TRUE)
for(i in 1:3){
qqnorm(z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
}
Z<-scale(dat[,-1],scale=TRUE)
for(i in 1:3){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
}
par(mfrow=c(1,4))
for(i in 4:8){
qqnorm(dat[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
}
par(mfrow=c(1,5))
for(i in 4:8){
qqnorm(dat[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
}
Z<-scale(dat[,-1],scale=TRUE)
for(i in 1:3){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
par(mfrow=c(1,5))
for(i in 4:8){
qqnorm(dat[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
}
par(mfrow=c(1,5))
for(i in 4:8){
qqnorm(dat[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
for(i in 4:8){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
dat<- read.table("hemangioma.txt",header = TRUE)
par(mfrow=c(1,3))
Z<-scale(dat[,-1],scale=TRUE)
for(i in 1:3){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
par(mfrow=c(1,5))
for(i in 4:8){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
par(mfrow=c(1,4))
for(i in 4:8){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
ggpairs(Z)
library(GGally)
ggpairs(Z)
dat<- read.table("hemangioma.txt",header = TRUE)
par(mfrow=c(1,3))
Z<-scale(dat[,-1],scale=TRUE)
for(i in 1:3){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
par(mfrow=c(1,4))
for(i in 4:8){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
par(mfrow=c(1,1))
for(i in 4:7){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
par(mfrow=c(1,4))
for(i in 4:7){
qqnorm(Z[,i],
main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(Z, col = "steelblue", lwd = 2)
}
library(GGally)
ggpairs(Z)
ggpairs(Z)
x5<-Z[,6]
x6<-Z[,7]
par(mfrow=c(1,1))
dataEllipse(x5, x6,
xlim = c(-1500, 3500), ylim = c(-30, 40),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
library(car)
dataEllipse(x5, x6,
xlim = c(-1500, 3500), ylim = c(-30, 40),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
dataEllipse(x5, x6,
xlim = c(-1, 1), ylim = c(-1, 1),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
dataEllipse(x5, x6,
xlim = c(-5, 5), ylim = c(-5, 5),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
x5<-Z[,5]
x6<-Z[,6]
par(mfrow=c(1,1))
dataEllipse(x5, x6,
xlim = c(-5, 5), ylim = c(-5, 5),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
x5<-Z[,6]
x6<-Z[,7]
par(mfrow=c(1,1))
dataEllipse(x5, x6,
xlim = c(-5, 5), ylim = c(-5, 5),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
library(sem)
lt <- readMoments("EverittEx5.5.txt", diag = T)
dat<- read.table("hemangioma.txt",header = TRUE)
scaled_dat <- scale(dat[, -1], scale = TRUE)
par(mfrow=c(3,3))
for(i in 1:7){
qqnorm(scaled_dat[,i],main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(scaled_dat, col = "steelblue", lwd = 2)
}
dat<- read.table("hemangioma.txt",header = TRUE)
scaled_dat <- scale(dat[, -1], scale = TRUE)
par(mfrow=c(3,3))
for(i in 1:7){
qqnorm(scaled_dat[,i],main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(scaled_dat, col = "steelblue", lwd = 2)
}
library(car)
column7 <- dat[,7]
column8 <- dat[,8]
par(mfrow=c(1,1))
dataEllipse(column7, column8,
xlim = c(-5,15), ylim = c(-30000, 40000),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
updated_dat <- dat[-11,]
updated_column7 <- updated_dat[,7]
updated_column8 <- updated_dat[,8]
par(mfrow=c(1,1))
dataEllipse(updated_column7, updated_column8,
xlim = c(-5,15), ylim = c(-30000, 40000),
pch=19, col = c("steelblue", "#990000"), lty=2,
ellipse.label=c(0.5, 0.95), levels = c(0.5, 0.95),
fill=TRUE, fill.alpha=0.1)
EFA_dat <- factanal(scaled_dat,factors=3)
EFA_dat
EFA_updated_dat <- factanal(updated_dat,factors=3)
EFA_updated_dat
par(mfrow=c(1,4))
for(i in 1:4){
qqnorm(scaled_dat[,i],main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(scaled_dat, col = "steelblue", lwd = 2)
}
par(mfrow=c(3,3))
for(i in 1:7){
qqnorm(scaled_dat[,i],main = paste0("Q-Q plot ",i),pch=19,cex=1.5)
qqline(scaled_dat, col = "steelblue", lwd = 2)
}
1.5^2
?dnorm
sample_size<-20
x<- seq(0,10,sample_size)
mu_x<-6
var_x<-1.5^2
mu_0<-4
var_0<-0.8^2
#Sample generation for the both prior and likelihood
Likelihood_dist<- dnorm(x,mu_x,var_x)
prior_dist<- dnorm(x,mu_0,var_0)
x_i<- rnorm(sample_size,mu_x,sqrt(var_x))
var_n<- (var_x*var_0)/(var_x+(sample*var_0))
w1<-(var_x*mu_0)/(var_x+(sample_size)*var_0)
w2<-(sample_size*mean(x_i)*var_0)/(var_x+(sample_size)*var_0)
mu_n<-w1+w2
var_n<- (var_x*var_0)/(var_x+(sample*var_0))
var_n<- (var_x*var_0)/(var_x+(sample_size*var_0))
w1<-(var_x*mu_0)/(var_x+(sample_size)*var_0)
w2<-(sample_size*mean(x_i)*var_0)/(var_x+(sample_size)*var_0)
mu_n<-w1+w2
post_dist<- dnorm(x,mu_n,sqrt(var_n))
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
sample_size<-20
x<- seq(0,10,sample_size)
mu_x<-6
var_x<-1.5^2
mu_0<-4
var_0<-0.8^2
Likelihood_dist<- dnorm(x,mu_x,var_x)
prior_dist<- dnorm(x,mu_0,var_0)
x_i<- rnorm(sample_size,mu_x,sqrt(var_x))
var_n<- (var_x*var_0)/(var_x+(sample_size*var_0))
w1<-(var_x*mu_0)/(var_x+(sample_size)*var_0)
w2<-(sample_size*mean(x_i)*var_0)/(var_x+(sample_size)*var_0)
mu_n<-w1+w2
post_dist<- dnorm(x,mu_n,sqrt(var_n))
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
plot(0,0,xlim=c(0,10),ylim=c(0,1))
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
plot(0,0,xlim=c(0,1),ylim=c(0,1))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
plot(0,0,xlim=c(0,10),ylim=c(0,10))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(sample_size,Likelihood_dist,col="green")
lines(sample_size,prior_dist,col="blue")
lines(sample_size,post_dist,col="red")
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(x,Likelihood_dist,col="green")
lines(x,prior_dist,col="blue")
lines(x,post_dist,col="red")
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(x,Likelihood_dist,col="green")
lines(x,prior_dist,col="blue")
lines(x,post_dist,col="red")
x
sample_size<-20
x<- seq(0,10,sample_size)
x
x<- seq(0,10,length.out =  sample_size)
x
sample_size<-20
x<- seq(0,10,length.out =  sample_size)
mu_x<-6
var_x<-1.5^2
mu_0<-4
var_0<-0.8^2
Likelihood_dist<- dnorm(x,mu_x,var_x)
prior_dist<- dnorm(x,mu_0,var_0)
x_i<- rnorm(sample_size,mu_x,sqrt(var_x))
var_n<- (var_x*var_0)/(var_x+(sample_size*var_0))
w1<-(var_x*mu_0)/(var_x+(sample_size)*var_0)
w2<-(sample_size*mean(x_i)*var_0)/(var_x+(sample_size)*var_0)
mu_n<-w1+w2
post_dist<- dnorm(x,mu_n,sqrt(var_n))
plot(0,0,xlim=c(0,10),ylim=c(0,1))
lines(x,Likelihood_dist,col="green")
lines(x,prior_dist,col="blue")
lines(x,post_dist,col="red")
